-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parse -> Root                               (0)
	Root -> Definitions                                (1)
	Root ->                                            (2)
	Definitions -> Function                            (3)
	Definitions -> Function Definitions                (4)
	Function -> GDef                                   (5)
	Function -> GDec                                   (6)
	GDec -> Tp id "(" FuncParams ")" ";"               (7)
	GDef -> Tp id "(" FuncParams ")" "{" MultStmt "}"   (8)
	Stmt -> Simple ";"                                 (9)
	Stmt -> "if" "(" Exp ")" Stmt "else" Stmt          (10)
	Stmt -> "if" "(" Exp ")" Stmt                      (11)
	Stmt -> "while" "(" Exp ")" Stmt                   (12)
	Stmt -> "for" "(" ForInner ")" Stmt                (13)
	Stmt -> "return" ";"                               (14)
	Stmt -> "return" Exp ";"                           (15)
	Stmt -> "{" MultStmt "}"                           (16)
	Stmt -> "{" "}"                                    (17)
	MultStmt -> Stmt                                   (18)
	MultStmt -> Stmt MultStmt                          (19)
	Simple -> Exp                                      (20)
	Simple -> AssignOp                                 (21)
	Simple -> Tp id                                    (22)
	Simple -> Tp id "=" Exp                            (23)
	Tp -> "int"                                        (24)
	Tp -> "bool"                                       (25)
	Tp -> "char"                                       (26)
	Tp -> "void"                                       (27)
	Tp -> "string"                                     (28)
	Exp -> "(" Exp ")"                                 (29)
	Exp -> int                                         (30)
	Exp -> bool                                        (31)
	Exp -> str                                         (32)
	Exp -> char                                        (33)
	Exp -> BinOp                                       (34)
	Exp -> id                                          (35)
	Exp -> id "(" CallParams ")"                       (36)
	ArithmeticOp -> Exp "+" Exp                        (37)
	ArithmeticOp -> Exp "-" Exp                        (38)
	ArithmeticOp -> Exp "/" Exp                        (39)
	ArithmeticOp -> Exp "*" Exp                        (40)
	ArithmeticOp -> Exp "%" Exp                        (41)
	RelationalOp -> Exp "==" Exp                       (42)
	RelationalOp -> Exp "<=" Exp                       (43)
	RelationalOp -> Exp ">=" Exp                       (44)
	RelationalOp -> Exp "!=" Exp                       (45)
	RelationalOp -> Exp "<" Exp                        (46)
	RelationalOp -> Exp ">" Exp                        (47)
	AssignOp -> id "=" Exp                             (48)
	BinOp -> ArithmeticOp                              (49)
	BinOp -> RelationalOp                              (50)
	FuncParams -> Tp id                                (51)
	FuncParams -> Tp id "," FuncParams                 (52)
	FuncParams ->                                      (53)
	CallParams -> Exp                                  (54)
	CallParams -> Exp "," CallParams                   (55)
	CallParams ->                                      (56)
	ForInner -> ";" Exp ";"                            (57)
	ForInner -> Simple ";" Exp ";"                     (58)
	ForInner -> ";" Exp ";" Simple                     (59)
	ForInner -> Simple ";" Exp ";" Simple              (60)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	int            { INT $$ }
	bool           { BOOL $$ }
	char           { CHAR $$ }
	str            { STRING $$ }
	"+"            { A_OP ADD }
	"-"            { A_OP SUB }
	"/"            { A_OP DIV }
	"*"            { A_OP MULT }
	"%"            { A_OP MOD }
	"=="           { R_OP EQUAL }
	"<="           { R_OP LESS_OR_EQUAL }
	">="           { R_OP MORE_OR_EQUAL }
	"!="           { R_OP NOT_EQUAL }
	"<"            { R_OP LESS }
	">"            { R_OP MORE }
	"for"          { FOR }
	"while"        { WHILE }
	"if"           { IF }
	"else"         { ELSE }
	"return"       { RETURN }
	"int"          { T_INT }
	"char"         { T_CHAR }
	"bool"         { T_BOOL }
	"void"         { T_VOID }
	"string"       { T_STRING }
	"{"            { LBRACE }
	"}"            { RBRACE }
	")"            { RPAREN }
	"("            { LPAREN }
	";"            { SEMICOLON }
	","            { COMMA }
	"="            { ASSIGN }
	id             { ID $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parse    rule  0
	Root            rules 1, 2
	Definitions     rules 3, 4
	Function        rules 5, 6
	GDec            rule  7
	GDef            rule  8
	Stmt            rules 9, 10, 11, 12, 13, 14, 15, 16, 17
	MultStmt        rules 18, 19
	Simple          rules 20, 21, 22, 23
	Tp              rules 24, 25, 26, 27, 28
	Exp             rules 29, 30, 31, 32, 33, 34, 35, 36
	ArithmeticOp    rules 37, 38, 39, 40, 41
	RelationalOp    rules 42, 43, 44, 45, 46, 47
	AssignOp        rule  48
	BinOp           rules 49, 50
	FuncParams      rules 51, 52, 53
	CallParams      rules 54, 55, 56
	ForInner        rules 57, 58, 59, 60

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	"int"          shift, and enter state 7
	"char"         shift, and enter state 8
	"bool"         shift, and enter state 9
	"void"         shift, and enter state 10
	"string"       shift, and enter state 11
	%eof           reduce using rule 2

	Root           goto state 12
	Definitions    goto state 2
	Function       goto state 3
	GDec           goto state 4
	GDef           goto state 5
	Tp             goto state 6

State 1


	"int"          shift, and enter state 7
	"char"         shift, and enter state 8
	"bool"         shift, and enter state 9
	"void"         shift, and enter state 10
	"string"       shift, and enter state 11

	Definitions    goto state 2
	Function       goto state 3
	GDec           goto state 4
	GDef           goto state 5
	Tp             goto state 6

State 2

	Root -> Definitions .                               (rule 1)

	%eof           reduce using rule 1


State 3

	Definitions -> Function .                           (rule 3)
	Definitions -> Function . Definitions               (rule 4)

	"int"          shift, and enter state 7
	"char"         shift, and enter state 8
	"bool"         shift, and enter state 9
	"void"         shift, and enter state 10
	"string"       shift, and enter state 11
	%eof           reduce using rule 3

	Definitions    goto state 14
	Function       goto state 3
	GDec           goto state 4
	GDef           goto state 5
	Tp             goto state 6

State 4

	Function -> GDec .                                  (rule 6)

	"int"          reduce using rule 6
	"char"         reduce using rule 6
	"bool"         reduce using rule 6
	"void"         reduce using rule 6
	"string"       reduce using rule 6
	%eof           reduce using rule 6


State 5

	Function -> GDef .                                  (rule 5)

	"int"          reduce using rule 5
	"char"         reduce using rule 5
	"bool"         reduce using rule 5
	"void"         reduce using rule 5
	"string"       reduce using rule 5
	%eof           reduce using rule 5


State 6

	GDec -> Tp . id "(" FuncParams ")" ";"              (rule 7)
	GDef -> Tp . id "(" FuncParams ")" "{" MultStmt "}"    (rule 8)

	id             shift, and enter state 13


State 7

	Tp -> "int" .                                       (rule 24)

	id             reduce using rule 24


State 8

	Tp -> "char" .                                      (rule 26)

	id             reduce using rule 26


State 9

	Tp -> "bool" .                                      (rule 25)

	id             reduce using rule 25


State 10

	Tp -> "void" .                                      (rule 27)

	id             reduce using rule 27


State 11

	Tp -> "string" .                                    (rule 28)

	id             reduce using rule 28


State 12

	%start_parse -> Root .                              (rule 0)

	%eof           accept


State 13

	GDec -> Tp id . "(" FuncParams ")" ";"              (rule 7)
	GDef -> Tp id . "(" FuncParams ")" "{" MultStmt "}"    (rule 8)

	"("            shift, and enter state 15


State 14

	Definitions -> Function Definitions .               (rule 4)

	%eof           reduce using rule 4


State 15

	GDec -> Tp id "(" . FuncParams ")" ";"              (rule 7)
	GDef -> Tp id "(" . FuncParams ")" "{" MultStmt "}"    (rule 8)

	"int"          shift, and enter state 7
	"char"         shift, and enter state 8
	"bool"         shift, and enter state 9
	"void"         shift, and enter state 10
	"string"       shift, and enter state 11
	")"            reduce using rule 53

	Tp             goto state 16
	FuncParams     goto state 17

State 16

	FuncParams -> Tp . id                               (rule 51)
	FuncParams -> Tp . id "," FuncParams                (rule 52)

	id             shift, and enter state 19


State 17

	GDec -> Tp id "(" FuncParams . ")" ";"              (rule 7)
	GDef -> Tp id "(" FuncParams . ")" "{" MultStmt "}"    (rule 8)

	")"            shift, and enter state 18


State 18

	GDec -> Tp id "(" FuncParams ")" . ";"              (rule 7)
	GDef -> Tp id "(" FuncParams ")" . "{" MultStmt "}"    (rule 8)

	"{"            shift, and enter state 21
	";"            shift, and enter state 22


State 19

	FuncParams -> Tp id .                               (rule 51)
	FuncParams -> Tp id . "," FuncParams                (rule 52)

	")"            reduce using rule 51
	","            shift, and enter state 20


State 20

	FuncParams -> Tp id "," . FuncParams                (rule 52)

	"int"          shift, and enter state 7
	"char"         shift, and enter state 8
	"bool"         shift, and enter state 9
	"void"         shift, and enter state 10
	"string"       shift, and enter state 11
	")"            reduce using rule 53

	Tp             goto state 16
	FuncParams     goto state 43

State 21

	GDef -> Tp id "(" FuncParams ")" "{" . MultStmt "}"    (rule 8)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"for"          shift, and enter state 36
	"while"        shift, and enter state 37
	"if"           shift, and enter state 38
	"return"       shift, and enter state 39
	"int"          shift, and enter state 7
	"char"         shift, and enter state 8
	"bool"         shift, and enter state 9
	"void"         shift, and enter state 10
	"string"       shift, and enter state 11
	"{"            shift, and enter state 40
	"("            shift, and enter state 41
	id             shift, and enter state 42

	Stmt           goto state 23
	MultStmt       goto state 24
	Simple         goto state 25
	Tp             goto state 26
	Exp            goto state 27
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	AssignOp       goto state 30
	BinOp          goto state 31

State 22

	GDec -> Tp id "(" FuncParams ")" ";" .              (rule 7)

	"int"          reduce using rule 7
	"char"         reduce using rule 7
	"bool"         reduce using rule 7
	"void"         reduce using rule 7
	"string"       reduce using rule 7
	%eof           reduce using rule 7


State 23

	MultStmt -> Stmt .                                  (rule 18)
	MultStmt -> Stmt . MultStmt                         (rule 19)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"for"          shift, and enter state 36
	"while"        shift, and enter state 37
	"if"           shift, and enter state 38
	"return"       shift, and enter state 39
	"int"          shift, and enter state 7
	"char"         shift, and enter state 8
	"bool"         shift, and enter state 9
	"void"         shift, and enter state 10
	"string"       shift, and enter state 11
	"{"            shift, and enter state 40
	"}"            reduce using rule 18
	"("            shift, and enter state 41
	id             shift, and enter state 42

	Stmt           goto state 23
	MultStmt       goto state 69
	Simple         goto state 25
	Tp             goto state 26
	Exp            goto state 27
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	AssignOp       goto state 30
	BinOp          goto state 31

State 24

	GDef -> Tp id "(" FuncParams ")" "{" MultStmt . "}"    (rule 8)

	"}"            shift, and enter state 68


State 25

	Stmt -> Simple . ";"                                (rule 9)

	";"            shift, and enter state 67


State 26

	Simple -> Tp . id                                   (rule 22)
	Simple -> Tp . id "=" Exp                           (rule 23)

	id             shift, and enter state 66


State 27

	Simple -> Exp .                                     (rule 20)
	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)

	"+"            shift, and enter state 55
	"-"            shift, and enter state 56
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           shift, and enter state 60
	"<="           shift, and enter state 61
	">="           shift, and enter state 62
	"!="           shift, and enter state 63
	"<"            shift, and enter state 64
	">"            shift, and enter state 65
	")"            reduce using rule 20
	";"            reduce using rule 20


State 28

	BinOp -> ArithmeticOp .                             (rule 49)

	"+"            reduce using rule 49
	"-"            reduce using rule 49
	"/"            reduce using rule 49
	"*"            reduce using rule 49
	"%"            reduce using rule 49
	"=="           reduce using rule 49
	"<="           reduce using rule 49
	">="           reduce using rule 49
	"!="           reduce using rule 49
	"<"            reduce using rule 49
	">"            reduce using rule 49
	")"            reduce using rule 49
	";"            reduce using rule 49
	","            reduce using rule 49


State 29

	BinOp -> RelationalOp .                             (rule 50)

	"+"            reduce using rule 50
	"-"            reduce using rule 50
	"/"            reduce using rule 50
	"*"            reduce using rule 50
	"%"            reduce using rule 50
	"=="           reduce using rule 50
	"<="           reduce using rule 50
	">="           reduce using rule 50
	"!="           reduce using rule 50
	"<"            reduce using rule 50
	">"            reduce using rule 50
	")"            reduce using rule 50
	";"            reduce using rule 50
	","            reduce using rule 50


State 30

	Simple -> AssignOp .                                (rule 21)

	")"            reduce using rule 21
	";"            reduce using rule 21


State 31

	Exp -> BinOp .                                      (rule 34)

	"+"            reduce using rule 34
	"-"            reduce using rule 34
	"/"            reduce using rule 34
	"*"            reduce using rule 34
	"%"            reduce using rule 34
	"=="           reduce using rule 34
	"<="           reduce using rule 34
	">="           reduce using rule 34
	"!="           reduce using rule 34
	"<"            reduce using rule 34
	">"            reduce using rule 34
	")"            reduce using rule 34
	";"            reduce using rule 34
	","            reduce using rule 34


State 32

	Exp -> int .                                        (rule 30)

	"+"            reduce using rule 30
	"-"            reduce using rule 30
	"/"            reduce using rule 30
	"*"            reduce using rule 30
	"%"            reduce using rule 30
	"=="           reduce using rule 30
	"<="           reduce using rule 30
	">="           reduce using rule 30
	"!="           reduce using rule 30
	"<"            reduce using rule 30
	">"            reduce using rule 30
	")"            reduce using rule 30
	";"            reduce using rule 30
	","            reduce using rule 30


State 33

	Exp -> bool .                                       (rule 31)

	"+"            reduce using rule 31
	"-"            reduce using rule 31
	"/"            reduce using rule 31
	"*"            reduce using rule 31
	"%"            reduce using rule 31
	"=="           reduce using rule 31
	"<="           reduce using rule 31
	">="           reduce using rule 31
	"!="           reduce using rule 31
	"<"            reduce using rule 31
	">"            reduce using rule 31
	")"            reduce using rule 31
	";"            reduce using rule 31
	","            reduce using rule 31


State 34

	Exp -> char .                                       (rule 33)

	"+"            reduce using rule 33
	"-"            reduce using rule 33
	"/"            reduce using rule 33
	"*"            reduce using rule 33
	"%"            reduce using rule 33
	"=="           reduce using rule 33
	"<="           reduce using rule 33
	">="           reduce using rule 33
	"!="           reduce using rule 33
	"<"            reduce using rule 33
	">"            reduce using rule 33
	")"            reduce using rule 33
	";"            reduce using rule 33
	","            reduce using rule 33


State 35

	Exp -> str .                                        (rule 32)

	"+"            reduce using rule 32
	"-"            reduce using rule 32
	"/"            reduce using rule 32
	"*"            reduce using rule 32
	"%"            reduce using rule 32
	"=="           reduce using rule 32
	"<="           reduce using rule 32
	">="           reduce using rule 32
	"!="           reduce using rule 32
	"<"            reduce using rule 32
	">"            reduce using rule 32
	")"            reduce using rule 32
	";"            reduce using rule 32
	","            reduce using rule 32


State 36

	Stmt -> "for" . "(" ForInner ")" Stmt               (rule 13)

	"("            shift, and enter state 54


State 37

	Stmt -> "while" . "(" Exp ")" Stmt                  (rule 12)

	"("            shift, and enter state 53


State 38

	Stmt -> "if" . "(" Exp ")" Stmt "else" Stmt         (rule 10)
	Stmt -> "if" . "(" Exp ")" Stmt                     (rule 11)

	"("            shift, and enter state 52


State 39

	Stmt -> "return" . ";"                              (rule 14)
	Stmt -> "return" . Exp ";"                          (rule 15)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	";"            shift, and enter state 51
	id             shift, and enter state 47

	Exp            goto state 50
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 40

	Stmt -> "{" . MultStmt "}"                          (rule 16)
	Stmt -> "{" . "}"                                   (rule 17)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"for"          shift, and enter state 36
	"while"        shift, and enter state 37
	"if"           shift, and enter state 38
	"return"       shift, and enter state 39
	"int"          shift, and enter state 7
	"char"         shift, and enter state 8
	"bool"         shift, and enter state 9
	"void"         shift, and enter state 10
	"string"       shift, and enter state 11
	"{"            shift, and enter state 40
	"}"            shift, and enter state 49
	"("            shift, and enter state 41
	id             shift, and enter state 42

	Stmt           goto state 23
	MultStmt       goto state 48
	Simple         goto state 25
	Tp             goto state 26
	Exp            goto state 27
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	AssignOp       goto state 30
	BinOp          goto state 31

State 41

	Exp -> "(" . Exp ")"                                (rule 29)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 46
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 42

	Exp -> id .                                         (rule 35)
	Exp -> id . "(" CallParams ")"                      (rule 36)
	AssignOp -> id . "=" Exp                            (rule 48)

	"+"            reduce using rule 35
	"-"            reduce using rule 35
	"/"            reduce using rule 35
	"*"            reduce using rule 35
	"%"            reduce using rule 35
	"=="           reduce using rule 35
	"<="           reduce using rule 35
	">="           reduce using rule 35
	"!="           reduce using rule 35
	"<"            reduce using rule 35
	">"            reduce using rule 35
	")"            reduce using rule 35
	"("            shift, and enter state 44
	";"            reduce using rule 35
	"="            shift, and enter state 45


State 43

	FuncParams -> Tp id "," FuncParams .                (rule 52)

	")"            reduce using rule 52


State 44

	Exp -> id "(" . CallParams ")"                      (rule 36)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	")"            reduce using rule 56
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 91
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31
	CallParams     goto state 92

State 45

	AssignOp -> id "=" . Exp                            (rule 48)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 90
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 46

	Exp -> "(" Exp . ")"                                (rule 29)
	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)

	"+"            shift, and enter state 55
	"-"            shift, and enter state 56
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           shift, and enter state 60
	"<="           shift, and enter state 61
	">="           shift, and enter state 62
	"!="           shift, and enter state 63
	"<"            shift, and enter state 64
	">"            shift, and enter state 65
	")"            shift, and enter state 89


State 47

	Exp -> id .                                         (rule 35)
	Exp -> id . "(" CallParams ")"                      (rule 36)

	"+"            reduce using rule 35
	"-"            reduce using rule 35
	"/"            reduce using rule 35
	"*"            reduce using rule 35
	"%"            reduce using rule 35
	"=="           reduce using rule 35
	"<="           reduce using rule 35
	">="           reduce using rule 35
	"!="           reduce using rule 35
	"<"            reduce using rule 35
	">"            reduce using rule 35
	")"            reduce using rule 35
	"("            shift, and enter state 44
	";"            reduce using rule 35
	","            reduce using rule 35


State 48

	Stmt -> "{" MultStmt . "}"                          (rule 16)

	"}"            shift, and enter state 88


State 49

	Stmt -> "{" "}" .                                   (rule 17)

	int            reduce using rule 17
	bool           reduce using rule 17
	char           reduce using rule 17
	str            reduce using rule 17
	"for"          reduce using rule 17
	"while"        reduce using rule 17
	"if"           reduce using rule 17
	"else"         reduce using rule 17
	"return"       reduce using rule 17
	"int"          reduce using rule 17
	"char"         reduce using rule 17
	"bool"         reduce using rule 17
	"void"         reduce using rule 17
	"string"       reduce using rule 17
	"{"            reduce using rule 17
	"}"            reduce using rule 17
	"("            reduce using rule 17
	id             reduce using rule 17


State 50

	Stmt -> "return" Exp . ";"                          (rule 15)
	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)

	"+"            shift, and enter state 55
	"-"            shift, and enter state 56
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           shift, and enter state 60
	"<="           shift, and enter state 61
	">="           shift, and enter state 62
	"!="           shift, and enter state 63
	"<"            shift, and enter state 64
	">"            shift, and enter state 65
	";"            shift, and enter state 87


State 51

	Stmt -> "return" ";" .                              (rule 14)

	int            reduce using rule 14
	bool           reduce using rule 14
	char           reduce using rule 14
	str            reduce using rule 14
	"for"          reduce using rule 14
	"while"        reduce using rule 14
	"if"           reduce using rule 14
	"else"         reduce using rule 14
	"return"       reduce using rule 14
	"int"          reduce using rule 14
	"char"         reduce using rule 14
	"bool"         reduce using rule 14
	"void"         reduce using rule 14
	"string"       reduce using rule 14
	"{"            reduce using rule 14
	"}"            reduce using rule 14
	"("            reduce using rule 14
	id             reduce using rule 14


State 52

	Stmt -> "if" "(" . Exp ")" Stmt "else" Stmt         (rule 10)
	Stmt -> "if" "(" . Exp ")" Stmt                     (rule 11)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 86
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 53

	Stmt -> "while" "(" . Exp ")" Stmt                  (rule 12)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 85
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 54

	Stmt -> "for" "(" . ForInner ")" Stmt               (rule 13)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"int"          shift, and enter state 7
	"char"         shift, and enter state 8
	"bool"         shift, and enter state 9
	"void"         shift, and enter state 10
	"string"       shift, and enter state 11
	"("            shift, and enter state 41
	";"            shift, and enter state 84
	id             shift, and enter state 42

	Simple         goto state 82
	Tp             goto state 26
	Exp            goto state 27
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	AssignOp       goto state 30
	BinOp          goto state 31
	ForInner       goto state 83

State 55

	ArithmeticOp -> Exp "+" . Exp                       (rule 37)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 81
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 56

	ArithmeticOp -> Exp "-" . Exp                       (rule 38)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 80
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 57

	ArithmeticOp -> Exp "/" . Exp                       (rule 39)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 79
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 58

	ArithmeticOp -> Exp "*" . Exp                       (rule 40)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 78
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 59

	ArithmeticOp -> Exp "%" . Exp                       (rule 41)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 77
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 60

	RelationalOp -> Exp "==" . Exp                      (rule 42)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 76
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 61

	RelationalOp -> Exp "<=" . Exp                      (rule 43)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 75
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 62

	RelationalOp -> Exp ">=" . Exp                      (rule 44)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 74
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 63

	RelationalOp -> Exp "!=" . Exp                      (rule 45)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 73
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 64

	RelationalOp -> Exp "<" . Exp                       (rule 46)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 72
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 65

	RelationalOp -> Exp ">" . Exp                       (rule 47)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 71
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 66

	Simple -> Tp id .                                   (rule 22)
	Simple -> Tp id . "=" Exp                           (rule 23)

	")"            reduce using rule 22
	";"            reduce using rule 22
	"="            shift, and enter state 70


State 67

	Stmt -> Simple ";" .                                (rule 9)

	int            reduce using rule 9
	bool           reduce using rule 9
	char           reduce using rule 9
	str            reduce using rule 9
	"for"          reduce using rule 9
	"while"        reduce using rule 9
	"if"           reduce using rule 9
	"else"         reduce using rule 9
	"return"       reduce using rule 9
	"int"          reduce using rule 9
	"char"         reduce using rule 9
	"bool"         reduce using rule 9
	"void"         reduce using rule 9
	"string"       reduce using rule 9
	"{"            reduce using rule 9
	"}"            reduce using rule 9
	"("            reduce using rule 9
	id             reduce using rule 9


State 68

	GDef -> Tp id "(" FuncParams ")" "{" MultStmt "}" .    (rule 8)

	"int"          reduce using rule 8
	"char"         reduce using rule 8
	"bool"         reduce using rule 8
	"void"         reduce using rule 8
	"string"       reduce using rule 8
	%eof           reduce using rule 8


State 69

	MultStmt -> Stmt MultStmt .                         (rule 19)

	"}"            reduce using rule 19


State 70

	Simple -> Tp id "=" . Exp                           (rule 23)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 100
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 71

	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)
	RelationalOp -> Exp ">" Exp .                       (rule 47)

	"+"            shift, and enter state 55
	"-"            shift, and enter state 56
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           reduce using rule 47
	"<="           reduce using rule 47
	">="           reduce using rule 47
	"!="           reduce using rule 47
	"<"            reduce using rule 47
	">"            reduce using rule 47
	")"            reduce using rule 47
	";"            reduce using rule 47
	","            reduce using rule 47


State 72

	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp "<" Exp .                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)

	"+"            shift, and enter state 55
	"-"            shift, and enter state 56
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           reduce using rule 46
	"<="           reduce using rule 46
	">="           reduce using rule 46
	"!="           reduce using rule 46
	"<"            reduce using rule 46
	">"            reduce using rule 46
	")"            reduce using rule 46
	";"            reduce using rule 46
	","            reduce using rule 46


State 73

	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp "!=" Exp .                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)

	"+"            shift, and enter state 55
	"-"            shift, and enter state 56
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           reduce using rule 45
	"<="           shift, and enter state 61
	">="           shift, and enter state 62
	"!="           reduce using rule 45
	"<"            shift, and enter state 64
	">"            shift, and enter state 65
	")"            reduce using rule 45
	";"            reduce using rule 45
	","            reduce using rule 45


State 74

	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp ">=" Exp .                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)

	"+"            shift, and enter state 55
	"-"            shift, and enter state 56
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           reduce using rule 44
	"<="           reduce using rule 44
	">="           reduce using rule 44
	"!="           reduce using rule 44
	"<"            reduce using rule 44
	">"            reduce using rule 44
	")"            reduce using rule 44
	";"            reduce using rule 44
	","            reduce using rule 44


State 75

	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp "<=" Exp .                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)

	"+"            shift, and enter state 55
	"-"            shift, and enter state 56
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           reduce using rule 43
	"<="           reduce using rule 43
	">="           reduce using rule 43
	"!="           reduce using rule 43
	"<"            reduce using rule 43
	">"            reduce using rule 43
	")"            reduce using rule 43
	";"            reduce using rule 43
	","            reduce using rule 43


State 76

	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp "==" Exp .                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)

	"+"            shift, and enter state 55
	"-"            shift, and enter state 56
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           reduce using rule 42
	"<="           shift, and enter state 61
	">="           shift, and enter state 62
	"!="           reduce using rule 42
	"<"            shift, and enter state 64
	">"            shift, and enter state 65
	")"            reduce using rule 42
	";"            reduce using rule 42
	","            reduce using rule 42


State 77

	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	ArithmeticOp -> Exp "%" Exp .                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)

	"+"            reduce using rule 41
	"-"            reduce using rule 41
	"/"            reduce using rule 41
	"*"            reduce using rule 41
	"%"            reduce using rule 41
	"=="           reduce using rule 41
	"<="           reduce using rule 41
	">="           reduce using rule 41
	"!="           reduce using rule 41
	"<"            reduce using rule 41
	">"            reduce using rule 41
	")"            reduce using rule 41
	";"            reduce using rule 41
	","            reduce using rule 41


State 78

	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp "*" Exp .                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)

	"+"            reduce using rule 40
	"-"            reduce using rule 40
	"/"            reduce using rule 40
	"*"            reduce using rule 40
	"%"            reduce using rule 40
	"=="           reduce using rule 40
	"<="           reduce using rule 40
	">="           reduce using rule 40
	"!="           reduce using rule 40
	"<"            reduce using rule 40
	">"            reduce using rule 40
	")"            reduce using rule 40
	";"            reduce using rule 40
	","            reduce using rule 40


State 79

	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp "/" Exp .                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)

	"+"            reduce using rule 39
	"-"            reduce using rule 39
	"/"            reduce using rule 39
	"*"            reduce using rule 39
	"%"            reduce using rule 39
	"=="           reduce using rule 39
	"<="           reduce using rule 39
	">="           reduce using rule 39
	"!="           reduce using rule 39
	"<"            reduce using rule 39
	">"            reduce using rule 39
	")"            reduce using rule 39
	";"            reduce using rule 39
	","            reduce using rule 39


State 80

	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp "-" Exp .                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)

	"+"            reduce using rule 38
	"-"            reduce using rule 38
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           reduce using rule 38
	"<="           reduce using rule 38
	">="           reduce using rule 38
	"!="           reduce using rule 38
	"<"            reduce using rule 38
	">"            reduce using rule 38
	")"            reduce using rule 38
	";"            reduce using rule 38
	","            reduce using rule 38


State 81

	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp "+" Exp .                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)

	"+"            reduce using rule 37
	"-"            reduce using rule 37
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           reduce using rule 37
	"<="           reduce using rule 37
	">="           reduce using rule 37
	"!="           reduce using rule 37
	"<"            reduce using rule 37
	">"            reduce using rule 37
	")"            reduce using rule 37
	";"            reduce using rule 37
	","            reduce using rule 37


State 82

	ForInner -> Simple . ";" Exp ";"                    (rule 58)
	ForInner -> Simple . ";" Exp ";" Simple             (rule 60)

	";"            shift, and enter state 99


State 83

	Stmt -> "for" "(" ForInner . ")" Stmt               (rule 13)

	")"            shift, and enter state 98


State 84

	ForInner -> ";" . Exp ";"                           (rule 57)
	ForInner -> ";" . Exp ";" Simple                    (rule 59)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 97
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 85

	Stmt -> "while" "(" Exp . ")" Stmt                  (rule 12)
	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)

	"+"            shift, and enter state 55
	"-"            shift, and enter state 56
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           shift, and enter state 60
	"<="           shift, and enter state 61
	">="           shift, and enter state 62
	"!="           shift, and enter state 63
	"<"            shift, and enter state 64
	">"            shift, and enter state 65
	")"            shift, and enter state 96


State 86

	Stmt -> "if" "(" Exp . ")" Stmt "else" Stmt         (rule 10)
	Stmt -> "if" "(" Exp . ")" Stmt                     (rule 11)
	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)

	"+"            shift, and enter state 55
	"-"            shift, and enter state 56
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           shift, and enter state 60
	"<="           shift, and enter state 61
	">="           shift, and enter state 62
	"!="           shift, and enter state 63
	"<"            shift, and enter state 64
	">"            shift, and enter state 65
	")"            shift, and enter state 95


State 87

	Stmt -> "return" Exp ";" .                          (rule 15)

	int            reduce using rule 15
	bool           reduce using rule 15
	char           reduce using rule 15
	str            reduce using rule 15
	"for"          reduce using rule 15
	"while"        reduce using rule 15
	"if"           reduce using rule 15
	"else"         reduce using rule 15
	"return"       reduce using rule 15
	"int"          reduce using rule 15
	"char"         reduce using rule 15
	"bool"         reduce using rule 15
	"void"         reduce using rule 15
	"string"       reduce using rule 15
	"{"            reduce using rule 15
	"}"            reduce using rule 15
	"("            reduce using rule 15
	id             reduce using rule 15


State 88

	Stmt -> "{" MultStmt "}" .                          (rule 16)

	int            reduce using rule 16
	bool           reduce using rule 16
	char           reduce using rule 16
	str            reduce using rule 16
	"for"          reduce using rule 16
	"while"        reduce using rule 16
	"if"           reduce using rule 16
	"else"         reduce using rule 16
	"return"       reduce using rule 16
	"int"          reduce using rule 16
	"char"         reduce using rule 16
	"bool"         reduce using rule 16
	"void"         reduce using rule 16
	"string"       reduce using rule 16
	"{"            reduce using rule 16
	"}"            reduce using rule 16
	"("            reduce using rule 16
	id             reduce using rule 16


State 89

	Exp -> "(" Exp ")" .                                (rule 29)

	"+"            reduce using rule 29
	"-"            reduce using rule 29
	"/"            reduce using rule 29
	"*"            reduce using rule 29
	"%"            reduce using rule 29
	"=="           reduce using rule 29
	"<="           reduce using rule 29
	">="           reduce using rule 29
	"!="           reduce using rule 29
	"<"            reduce using rule 29
	">"            reduce using rule 29
	")"            reduce using rule 29
	";"            reduce using rule 29
	","            reduce using rule 29


State 90

	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)
	AssignOp -> id "=" Exp .                            (rule 48)

	"+"            shift, and enter state 55
	"-"            shift, and enter state 56
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           shift, and enter state 60
	"<="           shift, and enter state 61
	">="           shift, and enter state 62
	"!="           shift, and enter state 63
	"<"            shift, and enter state 64
	">"            shift, and enter state 65
	")"            reduce using rule 48
	";"            reduce using rule 48


State 91

	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)
	CallParams -> Exp .                                 (rule 54)
	CallParams -> Exp . "," CallParams                  (rule 55)

	"+"            shift, and enter state 55
	"-"            shift, and enter state 56
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           shift, and enter state 60
	"<="           shift, and enter state 61
	">="           shift, and enter state 62
	"!="           shift, and enter state 63
	"<"            shift, and enter state 64
	">"            shift, and enter state 65
	")"            reduce using rule 54
	","            shift, and enter state 94


State 92

	Exp -> id "(" CallParams . ")"                      (rule 36)

	")"            shift, and enter state 93


State 93

	Exp -> id "(" CallParams ")" .                      (rule 36)

	"+"            reduce using rule 36
	"-"            reduce using rule 36
	"/"            reduce using rule 36
	"*"            reduce using rule 36
	"%"            reduce using rule 36
	"=="           reduce using rule 36
	"<="           reduce using rule 36
	">="           reduce using rule 36
	"!="           reduce using rule 36
	"<"            reduce using rule 36
	">"            reduce using rule 36
	")"            reduce using rule 36
	";"            reduce using rule 36
	","            reduce using rule 36


State 94

	CallParams -> Exp "," . CallParams                  (rule 55)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	")"            reduce using rule 56
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 91
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31
	CallParams     goto state 106

State 95

	Stmt -> "if" "(" Exp ")" . Stmt "else" Stmt         (rule 10)
	Stmt -> "if" "(" Exp ")" . Stmt                     (rule 11)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"for"          shift, and enter state 36
	"while"        shift, and enter state 37
	"if"           shift, and enter state 38
	"return"       shift, and enter state 39
	"int"          shift, and enter state 7
	"char"         shift, and enter state 8
	"bool"         shift, and enter state 9
	"void"         shift, and enter state 10
	"string"       shift, and enter state 11
	"{"            shift, and enter state 40
	"("            shift, and enter state 41
	id             shift, and enter state 42

	Stmt           goto state 105
	Simple         goto state 25
	Tp             goto state 26
	Exp            goto state 27
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	AssignOp       goto state 30
	BinOp          goto state 31

State 96

	Stmt -> "while" "(" Exp ")" . Stmt                  (rule 12)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"for"          shift, and enter state 36
	"while"        shift, and enter state 37
	"if"           shift, and enter state 38
	"return"       shift, and enter state 39
	"int"          shift, and enter state 7
	"char"         shift, and enter state 8
	"bool"         shift, and enter state 9
	"void"         shift, and enter state 10
	"string"       shift, and enter state 11
	"{"            shift, and enter state 40
	"("            shift, and enter state 41
	id             shift, and enter state 42

	Stmt           goto state 104
	Simple         goto state 25
	Tp             goto state 26
	Exp            goto state 27
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	AssignOp       goto state 30
	BinOp          goto state 31

State 97

	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)
	ForInner -> ";" Exp . ";"                           (rule 57)
	ForInner -> ";" Exp . ";" Simple                    (rule 59)

	"+"            shift, and enter state 55
	"-"            shift, and enter state 56
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           shift, and enter state 60
	"<="           shift, and enter state 61
	">="           shift, and enter state 62
	"!="           shift, and enter state 63
	"<"            shift, and enter state 64
	">"            shift, and enter state 65
	";"            shift, and enter state 103


State 98

	Stmt -> "for" "(" ForInner ")" . Stmt               (rule 13)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"for"          shift, and enter state 36
	"while"        shift, and enter state 37
	"if"           shift, and enter state 38
	"return"       shift, and enter state 39
	"int"          shift, and enter state 7
	"char"         shift, and enter state 8
	"bool"         shift, and enter state 9
	"void"         shift, and enter state 10
	"string"       shift, and enter state 11
	"{"            shift, and enter state 40
	"("            shift, and enter state 41
	id             shift, and enter state 42

	Stmt           goto state 102
	Simple         goto state 25
	Tp             goto state 26
	Exp            goto state 27
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	AssignOp       goto state 30
	BinOp          goto state 31

State 99

	ForInner -> Simple ";" . Exp ";"                    (rule 58)
	ForInner -> Simple ";" . Exp ";" Simple             (rule 60)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"("            shift, and enter state 41
	id             shift, and enter state 47

	Exp            goto state 101
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	BinOp          goto state 31

State 100

	Simple -> Tp id "=" Exp .                           (rule 23)
	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)

	"+"            shift, and enter state 55
	"-"            shift, and enter state 56
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           shift, and enter state 60
	"<="           shift, and enter state 61
	">="           shift, and enter state 62
	"!="           shift, and enter state 63
	"<"            shift, and enter state 64
	">"            shift, and enter state 65
	")"            reduce using rule 23
	";"            reduce using rule 23


State 101

	ArithmeticOp -> Exp . "+" Exp                       (rule 37)
	ArithmeticOp -> Exp . "-" Exp                       (rule 38)
	ArithmeticOp -> Exp . "/" Exp                       (rule 39)
	ArithmeticOp -> Exp . "*" Exp                       (rule 40)
	ArithmeticOp -> Exp . "%" Exp                       (rule 41)
	RelationalOp -> Exp . "==" Exp                      (rule 42)
	RelationalOp -> Exp . "<=" Exp                      (rule 43)
	RelationalOp -> Exp . ">=" Exp                      (rule 44)
	RelationalOp -> Exp . "!=" Exp                      (rule 45)
	RelationalOp -> Exp . "<" Exp                       (rule 46)
	RelationalOp -> Exp . ">" Exp                       (rule 47)
	ForInner -> Simple ";" Exp . ";"                    (rule 58)
	ForInner -> Simple ";" Exp . ";" Simple             (rule 60)

	"+"            shift, and enter state 55
	"-"            shift, and enter state 56
	"/"            shift, and enter state 57
	"*"            shift, and enter state 58
	"%"            shift, and enter state 59
	"=="           shift, and enter state 60
	"<="           shift, and enter state 61
	">="           shift, and enter state 62
	"!="           shift, and enter state 63
	"<"            shift, and enter state 64
	">"            shift, and enter state 65
	";"            shift, and enter state 109


State 102

	Stmt -> "for" "(" ForInner ")" Stmt .               (rule 13)

	int            reduce using rule 13
	bool           reduce using rule 13
	char           reduce using rule 13
	str            reduce using rule 13
	"for"          reduce using rule 13
	"while"        reduce using rule 13
	"if"           reduce using rule 13
	"else"         reduce using rule 13
	"return"       reduce using rule 13
	"int"          reduce using rule 13
	"char"         reduce using rule 13
	"bool"         reduce using rule 13
	"void"         reduce using rule 13
	"string"       reduce using rule 13
	"{"            reduce using rule 13
	"}"            reduce using rule 13
	"("            reduce using rule 13
	id             reduce using rule 13


State 103

	ForInner -> ";" Exp ";" .                           (rule 57)
	ForInner -> ";" Exp ";" . Simple                    (rule 59)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"int"          shift, and enter state 7
	"char"         shift, and enter state 8
	"bool"         shift, and enter state 9
	"void"         shift, and enter state 10
	"string"       shift, and enter state 11
	")"            reduce using rule 57
	"("            shift, and enter state 41
	id             shift, and enter state 42

	Simple         goto state 108
	Tp             goto state 26
	Exp            goto state 27
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	AssignOp       goto state 30
	BinOp          goto state 31

State 104

	Stmt -> "while" "(" Exp ")" Stmt .                  (rule 12)

	int            reduce using rule 12
	bool           reduce using rule 12
	char           reduce using rule 12
	str            reduce using rule 12
	"for"          reduce using rule 12
	"while"        reduce using rule 12
	"if"           reduce using rule 12
	"else"         reduce using rule 12
	"return"       reduce using rule 12
	"int"          reduce using rule 12
	"char"         reduce using rule 12
	"bool"         reduce using rule 12
	"void"         reduce using rule 12
	"string"       reduce using rule 12
	"{"            reduce using rule 12
	"}"            reduce using rule 12
	"("            reduce using rule 12
	id             reduce using rule 12


State 105

	Stmt -> "if" "(" Exp ")" Stmt . "else" Stmt         (rule 10)
	Stmt -> "if" "(" Exp ")" Stmt .                     (rule 11)

	int            reduce using rule 11
	bool           reduce using rule 11
	char           reduce using rule 11
	str            reduce using rule 11
	"for"          reduce using rule 11
	"while"        reduce using rule 11
	"if"           reduce using rule 11
	"else"         shift, and enter state 107
	"return"       reduce using rule 11
	"int"          reduce using rule 11
	"char"         reduce using rule 11
	"bool"         reduce using rule 11
	"void"         reduce using rule 11
	"string"       reduce using rule 11
	"{"            reduce using rule 11
	"}"            reduce using rule 11
	"("            reduce using rule 11
	id             reduce using rule 11


State 106

	CallParams -> Exp "," CallParams .                  (rule 55)

	")"            reduce using rule 55


State 107

	Stmt -> "if" "(" Exp ")" Stmt "else" . Stmt         (rule 10)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"for"          shift, and enter state 36
	"while"        shift, and enter state 37
	"if"           shift, and enter state 38
	"return"       shift, and enter state 39
	"int"          shift, and enter state 7
	"char"         shift, and enter state 8
	"bool"         shift, and enter state 9
	"void"         shift, and enter state 10
	"string"       shift, and enter state 11
	"{"            shift, and enter state 40
	"("            shift, and enter state 41
	id             shift, and enter state 42

	Stmt           goto state 111
	Simple         goto state 25
	Tp             goto state 26
	Exp            goto state 27
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	AssignOp       goto state 30
	BinOp          goto state 31

State 108

	ForInner -> ";" Exp ";" Simple .                    (rule 59)

	")"            reduce using rule 59


State 109

	ForInner -> Simple ";" Exp ";" .                    (rule 58)
	ForInner -> Simple ";" Exp ";" . Simple             (rule 60)

	int            shift, and enter state 32
	bool           shift, and enter state 33
	char           shift, and enter state 34
	str            shift, and enter state 35
	"int"          shift, and enter state 7
	"char"         shift, and enter state 8
	"bool"         shift, and enter state 9
	"void"         shift, and enter state 10
	"string"       shift, and enter state 11
	")"            reduce using rule 58
	"("            shift, and enter state 41
	id             shift, and enter state 42

	Simple         goto state 110
	Tp             goto state 26
	Exp            goto state 27
	ArithmeticOp   goto state 28
	RelationalOp   goto state 29
	AssignOp       goto state 30
	BinOp          goto state 31

State 110

	ForInner -> Simple ";" Exp ";" Simple .             (rule 60)

	")"            reduce using rule 60


State 111

	Stmt -> "if" "(" Exp ")" Stmt "else" Stmt .         (rule 10)

	int            reduce using rule 10
	bool           reduce using rule 10
	char           reduce using rule 10
	str            reduce using rule 10
	"for"          reduce using rule 10
	"while"        reduce using rule 10
	"if"           reduce using rule 10
	"else"         reduce using rule 10
	"return"       reduce using rule 10
	"int"          reduce using rule 10
	"char"         reduce using rule 10
	"bool"         reduce using rule 10
	"void"         reduce using rule 10
	"string"       reduce using rule 10
	"{"            reduce using rule 10
	"}"            reduce using rule 10
	"("            reduce using rule 10
	id             reduce using rule 10


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 61
Number of terminals: 33
Number of non-terminals: 18
Number of states: 112
